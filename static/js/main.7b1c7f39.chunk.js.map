{"version":3,"sources":["features/appMain/appWorker/bworker.ts","webpack:///./src/features/appMain/appWorker/bworker.ts?2a25","features/appMain/appWorker/painterSlice.ts","features/appVersion/appVersion.tsx","features/appToolbar/toolButton.tsx","features/appToolbar/paintersTools.tsx","features/appMain/downloadSlice.ts","features/appToolbar/downloadTool.tsx","features/appMain/progressSlice.ts","features/appToolbar/painterProgress.tsx","features/appToolbar/appToolbar.tsx","uselib/useMouse.ts","uselib/usePanZoom.ts","uselib/useCenterPos.ts","features/appMain/PanZoom.tsx","imglib/imagebase.ts","imglib/canvasUtils.ts","features/appMain/appWorker/fworker.ts","features/appMain/appDisplay.tsx","features/appMain/appMain.tsx","App.tsx","store.ts","serviceWorker.ts","index.tsx"],"names":["inst","wrap","Worker","module","exports","f","this","PainterType","useStyles","makeStyles","theme","version","position","left","bottom","fontSize","color","palette","primary","main","ribbon","right","top","AppVersion","label","baseURL","forkme","classes","className","href","width","height","src","alt","onClick","gitVersion","long","window","location","initialState","painter","Bilateral","slice","createSlice","name","reducers","setPainter","state","action","payload","actions","selectPainter","createStyles","menuButton","marginRight","spacing","menuButtonSelected","transform","ToolButton","Icon","isSelected","iconClass","IconButton","edge","e","BilateralPainter","PainterTool","PaletteIcon","type","TensorPainter","BrushIcon","Tensor","useSelector","dispatch","useDispatch","download","setDownload","selecDownload","DownloadTool","GetAppIcon","current","total","setProgress","selectProgress","progress","cirProgress","txtProgress","PainterProgress","showProgres","percentage","progVariant","progLabel","Math","round","Box","display","CircularProgress","variant","value","alignItems","justifyContent","Typography","component","root","flexGrow","toolbar","toolList","AppToolbar","AppBar","Toolbar","Hidden","xsDown","umDeviceTypes","umButtonPress","umNoEvent","device","None","event","usePanZoom","targetRef","deps","useState","DOMMatrix","mat","setMat","prvPoint","useRef","prvDist","userEvent","setUserEvent","useEffect","getMousePoint","bounds","currentTarget","getBoundingClientRect","x","clientX","y","clientY","getMouseWheel","deltaX","deltaY","getTouchPoints","Array","touches","length","fill","map","i","index","getTouchPoint","onMouseEvent","isMobile","Mouse","button","buttons","mousePoint","mouseWheel","onMouseLeave","onMouseWheel","Wheel","onTouch","Touch","pointers","htmlEl","addEventListener","removeEventListener","useMouse","doPanZoom","dx","dy","scale","settings","fromMatrix","cZoom","a","max","min","pan","translateSelf","preMultiplySelf","zoom","scaleSelf","ds","processMouseEvent","mid","dst","sqrt","distance","processTouchEvent","initSize","mainDiv","touchAction","overflow","PanZoom","children","filename","contDiv","pzMatrix","cpMatrix","contEl","mainEl","pose","setPose","size","setSize","cont","xScale","clientWidth","yScale","clientHeight","matrix","concat","updateSize","outerWidth","outerHeight","useCenterPos","ref","style","transformOrigin","toString","ImageFactory","ImageBase","Uint8Array","BYTES_PER_ELEMENT","Uint16Array","Float32Array","Uint8","Uint16","Float32","elementSize","constructor","buffer","pixels","nPixels","ArrayBuffer","from","checkBoundary","Error","reduce","val","idx","slope","intercept","dstImage","Image","dstPixels","imagePixels","forEach","v","replace","assert","require","CanvasUtils","canvas","data","getContext","getImageData","seq","cPtr","sPtr","inCanvas","outCanvas","ctx","putImageData","imgR","imgG","imgB","cPixels","rPixels","gPixels","bPixels","p","srcImg","dstImg","ptr","r","g","b","image","hImg","sImg","vImg","hPixels","sPixels","vPixels","hsv","Rgb2Hsv","h","s","rgb","Hsv2Rgb","out","delta","hh","region","floor","reminder","q","t","lImg","aImg","bImg","lPixels","aPixels","lab","Rgb2Lab","l","Lab2Rgb","pow","z","BackWorkerFactory","comlinkWorker","ForeWorker","bworker","timer","imgWidth","naturalWidth","imgHeight","naturalHeight","wScale","hScale","cnvWidth","cnvHeight","drawImage","console","error","doWork","seqCanvas","CanvasUtil","toSeq","default","next","work","fromSeq","setTimeout","clearTimeout","stop","AppDisplay","imagePath","setLoading","mDiv","worker","dImage","toDataURL","link","document","createElement","setAttribute","click","progressCallback","useCallback","img","onload","startWorker","start","then","padding","drop","borderWidth","borderStyle","borderColor","light","flexDirection","dark","textAlign","noDisplay","imageExtensions","AppMain","file","setFile","onDrop","files","list","filter","some","ext","path","toLowerCase","endsWith","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","createMuiTheme","blue","secondary","background","withStyles","app","CssBaseline","store","configureStore","reducer","painterReducer","downloadReducer","progressReducer","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7b1c7f39.chunk.js","sourcesContent":["var wrap = require('comlink').wrap,Worker = require(\"!worker-loader?{}!/Users/vittorio/Documents/Personal/Project/artist/node_modules/comlink-loader/dist/comlink-worker-loader.js!/Users/vittorio/Documents/Personal/Project/artist/node_modules/babel-loader/lib/index.js??ref--5-oneOf-2!/Users/vittorio/Documents/Personal/Project/artist/src/features/appMain/appWorker/bworker.ts\"),inst;module.exports = function f() {if (this instanceof f) return wrap(Worker());return inst || (inst = wrap(Worker()));};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"0fa318f501484e94ff44.worker.js\");\n};","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../../store'\n\nexport enum PainterType {\n    Tensor =0,\n    Bilateral=1\n}\ninterface PainterState {\n    painter : PainterType\n  }\n  \n  const initialState: PainterState = {\n    painter : PainterType.Bilateral\n  };\n\n  export const slice = createSlice({\n    name: 'PainterType',\n    initialState,\n    reducers: {\n        setPainter : ( state, action : PayloadAction<PainterType> ) => {\n            state.painter = action.payload\n        }\n      }\n    })\n  \n  export const { setPainter } = slice.actions;\n  export const selectPainter = (state: RootState) => state.painter.painter\n  export default slice.reducer;","import React from \"react\";\nimport gitVersion from '../../tools/gitInfo.json'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    version: {\n        position: 'absolute', \n        left: '14px', \n        bottom: '0px',\n        fontSize : '12px',\n        color : theme.palette.primary.main\n    },\n    ribbon :{\n        position: 'absolute', \n        right: '0px', \n        top: '0px'\n    }\n}))\n\n\ntype gitInfoProps = { label : string, baseURL? : string, forkme : Boolean }\n\nconst  AppVersion = ({label, baseURL, forkme}:gitInfoProps) => {\n        const classes = useStyles();\n        const handleClick = () => {\n            if( baseURL && gitVersion.long !== \"\" )  window.location.href = baseURL+'/tree/'+gitVersion.long;\n        }\n        return ( \n            <>\n            {forkme && baseURL && (\n                <div className={classes.ribbon}> \n                    <a href={baseURL}>\n                        <img width=\"100\" height=\"100\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_red_aa0000.png?resize=100%2C100\" alt=\"Fork me on GitHub\"/>\n                    </a>\n                </div>\n            ) }\n            <div className={classes.version} onClick={handleClick}>\n                <p>{label + gitVersion.version}</p>\n            </div>\n            </>\n        )\n}\n\nexport default AppVersion;","\nimport React from 'react';\nimport {createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport { IconButton, SvgIconTypeMap } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    menuButton: {\n      marginRight: theme.spacing(2),\n      color:'inherit',\n    },\n    menuButtonSelected : {\n        marginRight: theme.spacing(2),\n        color:'#F0F0FF',\n        transform:'scale(1.4, 1.4)',\n      }\n  }),\n);\n\nexport type ToolButtonInfo = {\n    onClick : ()=>void, \n    Icon : OverridableComponent<SvgIconTypeMap<{}, \"svg\">>,\n    isSelected : boolean\n}\nexport default function ToolButton( { onClick, Icon, isSelected}: ToolButtonInfo) {\n  const classes = useStyles();\n\n  const iconClass = (isSelected ? classes.menuButtonSelected : classes.menuButton )   \n  \n  return (\n      <IconButton edge=\"end\" className={iconClass} onClick={e=>onClick()}>  \n          <Icon />\n      </IconButton>\n  )\n}","import React from 'react'\nimport { SvgIconTypeMap } from '@material-ui/core'\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PainterType, selectPainter, setPainter } from '../appMain/appWorker/painterSlice'\nimport ToolButton from './toolButton'\nimport BrushIcon from '@material-ui/icons/Brush'\nimport PaletteIcon from '@material-ui/icons/Palette';\n\nexport function BilateralPainter () {\n    return <PainterTool Icon={PaletteIcon} type={PainterType.Bilateral}/>\n}\n\nexport function TensorPainter () {\n    return <PainterTool Icon={BrushIcon} type={PainterType.Tensor}/>  \n}\n\ntype PainterToolInfo = {\n    Icon : OverridableComponent<SvgIconTypeMap<{}, \"svg\">>,\n    type : PainterType\n}\nfunction PainterTool( {Icon, type}: PainterToolInfo) {\n    const selPainter =  useSelector(selectPainter)\n    const isSelected = selPainter === type\n    const dispatch   = useDispatch()\n    const onClick    = () => dispatch(setPainter(type))\n    return (\n        <ToolButton onClick={onClick} Icon={Icon} isSelected={isSelected}/>\n    )\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../store'\n\n\ninterface DownloadState {\n    download : boolean\n  }\n  \n  const initialState: DownloadState = {\n    download : false\n  };\n\n  export const slice = createSlice({\n    name: 'DownloadAction',\n    initialState,\n    reducers: {\n        setDownload : ( state, action : PayloadAction<boolean> ) => {\n            state.download = action.payload\n        }\n      }\n    })\n  \n  export const { setDownload } = slice.actions;\n  export const selecDownload= (state: RootState) => state.download.download\n  export default slice.reducer;","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport ToolButton from './toolButton'\nimport GetAppIcon from '@material-ui/icons/GetApp'\nimport { setDownload } from '../appMain/downloadSlice'\n\n\nexport default function DownloadTool( ) {\n    const dispatch   = useDispatch()\n    const onClick    = () => dispatch(setDownload(true))\n    return (\n        <ToolButton onClick={onClick} Icon={GetAppIcon} isSelected={false}/>\n    )\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../store'\n\n\ninterface ProgressState {\n    current : number,\n    total   : number\n  }\n  \n  const initialState: ProgressState = {\n    current : 0,\n    total   : 0\n  };\n\n  export const slice = createSlice({\n    name: 'Progress',\n    initialState,\n    reducers: {\n        setProgress : ( state, action : PayloadAction<ProgressState> ) => {\n            state.current = action.payload.current\n            state.total   = action.payload.total\n        }\n      }\n    })\n  \n  export const { setProgress } = slice.actions;\n  export const selectProgress= (state: RootState) => state.progress\n  export default slice.reducer;","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectProgress } from '../appMain/progressSlice'\nimport { Box, CircularProgress, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    cirProgress: {\n      marginRight: theme.spacing(2),\n      color:'#0000FF',\n    },\n    txtProgress: {\n        marginRight: theme.spacing(2),\n        color:'#0000FF',\n    }\n  }),\n);\n\n\nexport default function PainterProgress() {\n    const classes = useStyles();\n    const progress   = useSelector(selectProgress)\n    const showProgres= progress.total > 0 && progress.current < progress.total\n    const percentage = showProgres ? progress.current/progress.total * 100 : 0\n    const progVariant = percentage > 0 ? \"determinate\" : \"indeterminate\";\n    const progLabel   = percentage > 0 ? `${Math.round(percentage)}%` : ``\n    return(\n        <>\n            {\n                showProgres ?\n                <Box position=\"relative\" display=\"inline-flex\">\n                    <CircularProgress className={classes.cirProgress} variant={progVariant} value={percentage} /> \n                    <Box\n                        top={0}\n                        left={0}\n                        bottom={0}\n                        right={0}\n                        position=\"absolute\"\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"center\"\n                    >\n                    <Typography variant=\"caption\" component=\"div\" className={classes.txtProgress}>{progLabel}</Typography>\n                    </Box>\n                </Box>\n                :\n                <></>\n            }\n        </>\n    )\n}\n\n\n\n\n\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { Hidden } from '@material-ui/core';\nimport {BilateralPainter, TensorPainter} from './paintersTools'\nimport DownloadTool from './downloadTool'\nimport PainterProgress from './painterProgress'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1\n    },\n    toolbar : {\n      display:'flex',\n      justifyContent:'space-between'\n    },\n    toolList : {\n      display:'flex',\n      alignItems:'center'\n    }\n  }),\n);\n\nexport default function AppToolbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\" className={classes.toolbar}>\n          <Hidden xsDown>\n            <Typography variant=\"h6\" color=\"inherit\">\n              Artist\n            </Typography>\n          </Hidden>\n          <div className={classes.toolList}>\n            <PainterProgress/>\n            <BilateralPainter/>\n            <TensorPainter/>\n            <DownloadTool/>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React, {useState,useEffect} from 'react'\nimport {isMobile} from 'react-device-detect';\n\n\n//\n// useMouse (um) events\n//\n\nexport enum umDeviceTypes {\n    None  =0,\n    Touch =1,\n    Mouse =2\n}\n\nexport enum umButtonPress {\n    Wheel=-1,\n    None =0,\n    Left =1,\n    Right=2,\n    LeftAndRight =3\n} \n\nexport type umPoint = {\n    x: number,\n    y: number\n}\nexport type umTouchEvent = {\n    pointers : umPoint []\n}\n\nexport type umMouseEvent = {\n    button : umButtonPress,\n    mousePoint : umPoint | null // null when the mouse is leaving the window.\n    mouseWheel : umPoint | null // null when the mouse is leaving the window.\n}\n\nexport type umUserEvent = {\n    device : umDeviceTypes,\n    event  : umMouseEvent | umTouchEvent | null // null only in case of DeviceType.None\n}\n\nexport const umNoEvent = { device : umDeviceTypes.None, event : null }\n\nexport function Point2DOM( point : umPoint ) : DOMPoint {\n    return new DOMPoint(point.x, point.y, 0, 1)\n}\n\nexport function DOM2Point( domPoint : DOMPoint ) : umPoint {\n    return {\n        x : domPoint.x,\n        y : domPoint.y\n    }\n}\n\n// this is based on :\n//   https://github.com/beautifulinteractions/beautiful-react-hooks/blob/master/src/useMouseEvents.js and\n//   https://github.com/beautifulinteractions/beautiful-react-hooks/blob/master/src/useMouseState.js\n// with the following modification :\n// - handling touch\n// - returning an object, rather then a callback\n\nexport default function useMouse( targetRef :  React.MutableRefObject<HTMLElement | null> ) {\n    const [userEvent, setUserEvent] = useState<umUserEvent>(umNoEvent)\n\n    useEffect(()=>{\n        // common functions\n        const getMousePoint = ( event: MouseEvent | WheelEvent ) : umPoint => {\n            let bounds = (event.currentTarget as Element ).getBoundingClientRect()\n            let x = event.clientX - bounds.left\n            let y = event.clientY - bounds.top\n            return { x, y }\n        }\n\n        const getMouseWheel = ( event: WheelEvent ) : umPoint => {\n            let x = event.deltaX\n            let y = event.deltaY\n            return { x, y }\n        }\n\n        const getTouchPoint = ( event:  TouchEvent , index : number ) : umPoint => {\n            let bounds = (event.currentTarget as Element ).getBoundingClientRect()\n            let x = event.touches[index].clientX - bounds.left\n            let y = event.touches[index].clientY - bounds.top\n            return { x, y }\n        }\n\n        const getTouchPoints = ( event: TouchEvent ) : umPoint [] =>{\n            let points = new Array<umPoint>(event.touches.length).fill({x:0,y:0})\n            return  points.map((e,i)=>getTouchPoint(event,i))\n        }\n\n        // Mouse events\n        const onMouseEvent = (event: MouseEvent) =>  {\n            if( !isMobile ){\n                setUserEvent({\n                    device : umDeviceTypes.Mouse,\n                    event : {\n                        button: event.buttons,\n                        mousePoint : getMousePoint(event),\n                        mouseWheel : {x:0,y:0}\n                    }\n                })\n            }\n        }\n\n        const onMouseLeave = (event: MouseEvent) =>{\n            if( !isMobile ){\n                setUserEvent({\n                    device : umDeviceTypes.Mouse,\n                    event : {\n                        button: event.buttons,\n                        mousePoint : null,\n                        mouseWheel : null\n                    }\n                })\n            }\n        }\n\n        const onMouseWheel = (event: WheelEvent) =>{\n            if( !isMobile ){\n                setUserEvent({\n                    device : umDeviceTypes.Mouse,\n                    event : {\n                        button: umButtonPress.Wheel,\n                        mousePoint : getMousePoint(event),\n                        mouseWheel : getMouseWheel(event)\n                    }\n                })\n            }\n        }\n\n        // touch Events\n        const onTouch = ( event : TouchEvent) => {\n            if( isMobile ){\n                setUserEvent({\n                    device : umDeviceTypes.Touch,\n                    event : {\n                        pointers : getTouchPoints(event)\n                    }\n                })\n            }\n        }\n\n        if( targetRef.current != null ){\n            let htmlEl = targetRef.current\n            htmlEl.addEventListener('mousedown', onMouseEvent)\n            htmlEl.addEventListener('mousemove',onMouseEvent)\n            htmlEl.addEventListener('mouseup',onMouseEvent)\n            htmlEl.addEventListener('mouseleave',onMouseLeave)\n            htmlEl.addEventListener('wheel',onMouseWheel)\n            htmlEl.addEventListener('touchstart', onTouch)\n            htmlEl.addEventListener('touchmove',onTouch)\n            htmlEl.addEventListener('touchend',onTouch)\n\n            return ()=>{\n                htmlEl.removeEventListener('mousedown', onMouseEvent)\n                htmlEl.removeEventListener('mousemove',onMouseEvent)\n                htmlEl.removeEventListener('mouseup',onMouseEvent)\n                htmlEl.removeEventListener('mouseleave',onMouseLeave)\n                htmlEl.removeEventListener('wheel',onMouseWheel)\n                htmlEl.removeEventListener('touchstart', onTouch)\n                htmlEl.removeEventListener('touchmove',onTouch)\n                htmlEl.removeEventListener('touchend',onTouch)            \n            }\n        }\n    },[targetRef])\n\n    return ( userEvent  )\n}","import React, {useState,useEffect,useRef} from 'react'\nimport useMouse, {umDeviceTypes, umPoint, umMouseEvent, umTouchEvent, umButtonPress} from './useMouse'\n\nconst minZoom = 0.1\nconst maxZoom = 10\n\n/**\n * Listen to the mouse events and return the DOM matrix which allows to pan and zoom the content \n * of the `targetRef`. The children of this object shall have the following CSS for  the  matrix\n * to work properly : `position: 'relative', transformOrigin: '0px 0px', transform: mat`\n * @param targetRef element which content shall be pan ad zoomed. \n * @param deps list of dependencies, which will trigger the reset of the pan and zoom parameters.\n */\nexport default function usePanZoom( targetRef :  React.MutableRefObject<HTMLElement | null> ,\n                                    deps   : React.DependencyList) : DOMMatrix {\n    const [mat, setMat] = useState<DOMMatrix>(new DOMMatrix())\n    const prvPoint = useRef<umPoint|null>(null)\n    const prvDist  = useRef<number|null>(null)\n    const event = useMouse(targetRef)\n\n    useEffect(()=>{\n        setMat(new DOMMatrix())\n    },deps) // eslint-disable-line  react-hooks/exhaustive-deps\n\n    useEffect(()=>{\n\n        // common function\n        const doPanZoom = ( dx : number, dy : number, x: number, y : number, scale : number ) => {\n            let settings = DOMMatrix.fromMatrix(mat)\n\n            let cZoom = settings.a // current zoom\n            if( cZoom < minZoom ) scale = Math.max(1.0, scale )\n            if( cZoom > maxZoom ) scale = Math.min(1.0, scale )\n\n            // pan\n            let pan = new DOMMatrix()\n            pan.translateSelf(dx, dy, 0)\n            settings.preMultiplySelf(pan)\n\n            // zoom\n            let zoom = new DOMMatrix()\n            zoom.scaleSelf(scale, scale, 1.0, x, y, 0)\n            settings.preMultiplySelf(zoom)\n            setMat(settings)\n        }\n\n        // Mouse events\n        const processMouseEvent = ( e : umMouseEvent  )=>{\n            if( e.button !== umButtonPress.None && e.mousePoint && e.mouseWheel ){\n                if( e.button === umButtonPress.Wheel ){\n                    // zoom\n                    let ds=1-e.mouseWheel.y/100;\n                    doPanZoom(0, 0, e.mousePoint.x, e.mousePoint.y,ds)\n                    prvPoint.current = null\n                } else {\n                    // user moving the mouse with button pressed.\n                    if( prvPoint.current ){\n                        // mouse move\n                        let dx = e.mousePoint.x - prvPoint.current.x \n                        let dy = e.mousePoint.y - prvPoint.current.y\n                        doPanZoom(dx, dy, 0, 0, 1)\n                    } \n                    prvPoint.current = e.mousePoint\n                }\n            } else {\n                prvPoint.current = null // done.\n            }\n        }\n\n        const midPoint = ( pointers : umPoint [] ) : umPoint => {\n            let x = ( pointers[0].x + pointers[1].x )/2\n            let y = ( pointers[0].y + pointers[1].y )/2\n            return { x, y }\n        }\n        const distance = ( pointers : umPoint [] ) : number => {\n            let dx = ( pointers[0].x - pointers[1].x )\n            let dy = ( pointers[0].y - pointers[1].y )\n            return Math.sqrt(dx*dx+dy*dy)\n        }\n\n        // touch events\n        const processTouchEvent = ( e : umTouchEvent )=>{\n            if( e.pointers !=null && e.pointers.length > 0 ){\n                if( e.pointers.length === 1 ){\n                    if(  prvPoint.current && prvDist.current == null ){ // prvDst is not null when there are two touches\n                        let dx = e.pointers[0].x - prvPoint.current.x \n                        let dy = e.pointers[0].y - prvPoint.current.y           \n                        doPanZoom(dx, dy, 0, 0, 1.0) // only pan\n                    } \n                    prvPoint.current = e.pointers[0]\n                    prvDist.current = null\n                } else if( e.pointers.length === 2 ) {\n                    let mid = midPoint(e.pointers)\n                    let dst = distance(e.pointers)\n                    if( prvPoint.current && prvDist.current ){\n                        let dx = mid.x - prvPoint.current.x \n                        let dy = mid.y - prvPoint.current.y \n                        let scale = dst/prvDist.current\n                        doPanZoom(dx, dy, mid.x, mid.y, scale)\n                    } \n                    prvPoint.current = mid\n                    prvDist.current = dst\n                }\n            } else {\n                // no touches\n                prvPoint.current = null // done.\n                prvDist.current = null  \n            }\n        }\n\n        switch( event.device ){\n            case umDeviceTypes.Mouse: \n                processMouseEvent(event.event as umMouseEvent);\n                break;\n            case umDeviceTypes.Touch:\n                processTouchEvent(event.event as umTouchEvent)\n        }\n\n    },[event]) // eslint-disable-line  react-hooks/exhaustive-deps\n\n    return DOMMatrix.fromMatrix(mat) // return a copy to prevent that it gets modified.\n}","import React, {useState,useEffect} from 'react'\n\ninterface Size  {\n    width : number,\n    height: number\n}\nconst initSize = { width:0, height:0}\n\n/**\n * computes the CSS transforation matrix which will center the `contEl` element inside `mainEl`\n * Listen to the resize event to adjust the matrix as necessary. Notice that the `contEl` requires\n * the following CSS for the matrix to work properly :\n * position: 'relative', transformOrigin: '0px 0px',\n * @param contEl element which has to be centered\n * @param mainEl container element\n * @param deps extra dependencies which shall trigger a recompute\n */\nexport default function useCenterPos(   contEl :  React.MutableRefObject<HTMLElement | null>,\n                                        mainEl : React.MutableRefObject<HTMLElement | null>,\n                                        deps   : React.DependencyList\n                                        ) : DOMMatrix {\n    const [pose, setPose] =  useState<DOMMatrix>(new DOMMatrix())\n    const [size, setSize]= useState< Size>(initSize)\n\n    useEffect(()=>{\n        if( contEl.current != null && mainEl.current != null ) {\n            let cont = contEl.current!\n            let main = mainEl.current!\n            let xScale = main.clientWidth/cont.clientWidth\n            let yScale = main.clientHeight/cont.clientHeight\n            let scale = Math.min(xScale,yScale)\n            let dx = ( main.clientWidth - cont.clientWidth * scale )/2\n            let dy = ( main.clientHeight - cont.clientHeight * scale )/2\n            let matrix = `matrix( ${scale}, 0, 0, ${scale}, ${dx}, ${dy})`\n            setPose( new DOMMatrix(matrix))\n        }\n\n    }, deps.concat([contEl, mainEl, size]))  // eslint-disable-line  react-hooks/exhaustive-deps\n\n    // handle the window size.\n    useEffect(()=>{\n        function updateSize() {\n            setSize( {\n                width : window.outerWidth,\n                height : window.outerHeight\n            })\n        }\n        window.addEventListener('resize', updateSize)\n        return ()=>{\n            window.removeEventListener('resize',updateSize)\n        }\n    },[])\n\n    return DOMMatrix.fromMatrix(pose) // return a copy to prevent to modify\n}","import React from 'react';\nimport {useRef} from 'react'\nimport usePanZoom from '../../uselib/usePanZoom'\nimport useCenterPos from '../../uselib/useCenterPos'\nimport {makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    mainDiv: {\n        width:'100%',\n        height:'100%',\n        touchAction:'none',\n        overflow:'hidden'\n    }\n}))\n\nexport interface PanZoomInfo {\n    children: React.ReactNode,\n    filename: string\n}\nexport default function PanZoom({children, filename} : PanZoomInfo) : JSX.Element {\n    const classes  = useStyles()\n    const mainDiv  = useRef<HTMLDivElement|null>(null)\n    const contDiv  = useRef<HTMLDivElement|null>(null) \n\n    let pzMatrix = usePanZoom(mainDiv,[filename])\n    let cpMatrix = useCenterPos(contDiv, mainDiv, [children])\n    cpMatrix.preMultiplySelf(pzMatrix)\n\n    return ( \n        <div className={classes.mainDiv} ref={mainDiv}>\n            <div style={{position: 'relative', transformOrigin: '0px 0px', transform: cpMatrix.toString(), width: 'fit-content', height: 'fit-content' }} ref={contDiv}>\n                {children}\n            </div>\n        </div>\n     )\n}","\ninterface TypedArray {\n    readonly length : number;\n    [n: number]: number;\n    buffer : ArrayBuffer;\n    reduce ( func : (total : number, currentValue : number, index : number ) => number, initialvalue : number) : number;\n}\n\ninterface TypedArrayConstructor<T extends TypedArray> {\n    new (buffer: ArrayBuffer, byteOffset?: number, length?: number): T;\n}\n\nexport type ImageUint8  = ImageBase<Uint8Array,Uint8ArrayConstructor>\nexport type ImageUint16 = ImageBase<Uint16Array,Uint16ArrayConstructor>\nexport type ImageFloat32= ImageBase<Float32Array,Float32ArrayConstructor>\n\n// this is the generic Image type. Using this approach we avoid to expose\n// the complexity of the generic used below.\n\nexport type Image2D = ImageUint8 | ImageUint16 | ImageFloat32\nexport type ImagePixels = Uint8Array | Uint16Array | Float32Array\nexport type ImageType = 'Uint8' | 'Uint16' | 'Float32'\n\n\nexport function isImage( obj : any ) : obj is Image2D {\n    return obj.imagePixels != null\n}\n\nexport class ImageFactory {\n\n    static Uint8( width : number, height : number ) : ImageUint8 {\n        return new ImageBase<Uint8Array,Uint8ArrayConstructor>(Uint8Array.BYTES_PER_ELEMENT, Uint8Array, width, height)\n    }\n    static Uint16( width : number, height : number ) : ImageUint16{\n        return (new ImageBase<Uint16Array,Uint16ArrayConstructor>(Uint16Array.BYTES_PER_ELEMENT, Uint16Array, width, height)) \n    }\n    static Float32( width : number, height : number ): ImageFloat32{\n        return new ImageBase<Float32Array,Float32ArrayConstructor>(Float32Array.BYTES_PER_ELEMENT, Float32Array, width, height)\n    }\n    static Image(type : ImageType, width : number, height : number ) : Image2D {\n        switch( type ){\n            case 'Uint8':\n                return ImageFactory.Uint8(width,height)\n            case 'Uint16':\n                return ImageFactory.Uint16(width,height)\n            case 'Float32':\n                return ImageFactory.Float32(width,height)\n        }\n    }\n}\n\n\nclass ImageBase<T extends TypedArray, C extends TypedArrayConstructor<T>> {\n\n    private buffer : T\n    private pixels : T [] \n\n    constructor( elementSize : number, constructor : C, width : number, height : number ) {\n        let nPixels= width * height;\n        let bytes  = nPixels * elementSize\n        let buffer= new ArrayBuffer(bytes);\n        this.pixels= Array.from(Array(height), (e,i)=> new constructor (buffer, width*elementSize*i, width) ) \n        this.buffer= new constructor(buffer, 0, nPixels)\n    }\n\n\n    /**\n     * get type of pixel stored.\n     */\n    get imageType(): ImageType {\n        return this.pixels[0].constructor.name.replace('Array','') as ImageType\n    }\n\n    /**\n     * returns the current list of pixels.\n     */\n    get imagePixels(): T {\n        return this.buffer \n    }\n\n    /**\n     *  get the image buffer\n     */\n    get imageBuffer() : ArrayBuffer {\n        return this.buffer.buffer\n    }\n\n    /**\n     * get image height\n     */\n    get height() : number {\n        return this.pixels.length\n    }\n\n    /**\n     * return image height\n     */\n    get width() : number {\n        return this.pixels[0].length\n    }\n\n    /**\n     * get a pixel value.\n     * @param x row of the pixel queried\n     * @param y column of the pixel queried\n     */\n    get( x: number, y: number ) : number {\n        if( !this.checkBoundary(x,y)) throw new Error (`Invalid image coordinates queried: image size ${this.width}x${this.height} pixel ${x},${y}`)\n        return this.pixels[y][x]\n    }\n\n    /**\n     * max pixel value in the image\n     */\n    maxValue() : number {\n        return this.buffer.reduce((max, val, idx)=>Math.max(val,max),this.buffer[0])\n    }\n\n    /**\n     * min pixel value in the image\n     */\n    minValue() : number {\n        return this.buffer.reduce((min, val, idx)=>Math.min(val,min),this.buffer[0])\n    }\n\n    /**\n     * get a row of pixels\n     * @param y row of pixels to select.\n     */\n    getRow(y:number) : T {\n        if( y<0 || y>this.height )throw new Error (`Invalid y coordinate queried : image height ${this.height} y ${y}`)\n        return this.pixels[y]\n    }\n\n    /**\n     * \n     * @param x row pixel to set\n     * @param y column pixel to se\n     * @param value  value to set\n     */\n    set(x:number, y:number, value : number) : void {\n        if( !this.checkBoundary(x,y)) throw new Error (`Invalid image coordinates set: image size ${this.width}x${this.height} pixel ${x},${y}`)\n        this.pixels[y][x]= value\n    }\n\n    /**\n     * convert and copy this image in a new image.\n     * @param type outpt image type\n     * @param slope multiplication factor applied to every pixel in the conversion\n     * @param intercept intercept used for every pixel in the conversion\n     */\n    convertTo(type : ImageType, slope? : number, intercept? : number) : Image2D {\n        let dstImage = ImageFactory.Image(type, this.width, this.height)\n        let dstPixels= dstImage.imagePixels\n        if( slope !=null  && intercept != null ){\n            dstPixels.forEach((v :number,i:number)=>dstPixels[i]=slope * this.buffer[i]+intercept)\n        } else {\n            dstPixels.forEach((v :number,i:number)=>dstPixels[i]=this.buffer[i])\n        }\n        return dstImage\n    }\n\n    /**\n     * check that the value passed are valid image coordinates.\n     * @param x row\n     * @param y column\n     */\n    private checkBoundary(x: number, y : number ) : boolean {\n        return x>=0 && x < this.width && y>=0 && y<this.height\n    }\n\n}","import {ImageFactory, ImageFloat32, ImageUint8} from './imagebase'\nconst assert = require('assert')\n\n/**\n * Simple interface used to sequentialize the canvas data from application to \n * backgrounnd workers\n */\nexport interface SeqCanvas {\n    width : number,\n    height: number,\n    data : Uint8Array // expected to be width * height * 3 with RGB values.\n} \n\nexport default class CanvasUtils {\n\n    /**\n     * given a canvas object sequantialize the content in `SeqCanvas` \n     * @param canvas html canvas object\n     */\n    static toSeq( canvas : HTMLCanvasElement ) : SeqCanvas {\n        let width = canvas.width\n        let height= canvas.height\n        let ctx = canvas.getContext('2d') as CanvasRenderingContext2D\n        let data= ctx.getImageData(0,0,width,height)\n        let seq : SeqCanvas = {\n            width :width,\n            height: height,\n            data : new Uint8Array(width * height * 3)\n        }\n        let cPtr =0\n        let sPtr =0\n        for( let i=0; i<width*height; i++){\n            seq.data[sPtr++] = data.data[cPtr++] // R\n            seq.data[sPtr++] = data.data[cPtr++] // G\n            seq.data[sPtr++] = data.data[cPtr++] // B\n            cPtr++ // A\n        }\n        return seq\n    }\n\n    /**\n     * deserialize the `inCanvas` object in to `outCanvas`\n     * @param inCanvas input SeqCanvas object\n     * @param outCanvas output canvas\n     */\n    static fromSeq( inCanvas : SeqCanvas, outCanvas : HTMLCanvasElement ) : void {\n        if( inCanvas.width * inCanvas.height * 3 !== inCanvas.data.length ) throw Error(`Invalid SeqCanvas, with ${inCanvas.width}, height ${inCanvas.height} and length ${inCanvas.data.length}`)\n        outCanvas.width = inCanvas.width\n        outCanvas.height= inCanvas.height\n        let ctx = outCanvas.getContext('2d')\n        if( ctx ){\n            let data= ctx.getImageData(0,0, inCanvas.width, inCanvas.height)\n            let cPtr =0\n            let sPtr =0\n            for( let i=0; i<inCanvas.width*inCanvas.height; i++){\n                data.data[cPtr++] = inCanvas.data[sPtr++]\n                data.data[cPtr++] = inCanvas.data[sPtr++]\n                data.data[cPtr++] = inCanvas.data[sPtr++]\n                data.data[cPtr++] = 255 // A\n            }\n            ctx.putImageData(data,0,0)\n        }\n    }\n\n    /**\n     *  Generate the canvas's channels (red, green, blue and alpha) in separate images.\n     * @param canvas \n     */\n    static toRGB( canvas : SeqCanvas ) : [ ImageUint8, ImageUint8, ImageUint8 ] {\n        let width = canvas.width\n        let height= canvas.height\n        let imgR= ImageFactory.Uint8(width,height)\n        let imgG= ImageFactory.Uint8(width,height)\n        let imgB= ImageFactory.Uint8(width,height)\n        let nPixels = width*height\n        let i =0\n        let cPixels = canvas.data\n        let rPixels = imgR.imagePixels\n        let gPixels = imgG.imagePixels\n        let bPixels = imgB.imagePixels\n    \n        for( let p=0; p<nPixels; p++){\n            rPixels[p]=cPixels[i++]\n            gPixels[p]=cPixels[i++]\n            bPixels[p]=cPixels[i++]\n        }\n    \n        return [ imgR, imgG, imgB ]\n    }\n\n    /**\n     * generate a canvas object using the images provided as channels.\n     * @param imgR \n     * @param imgG \n     * @param imgB \n     * @param imgA \n     */\n    static fromRGB( imgR : ImageUint8, imgG : ImageUint8, imgB : ImageUint8 ): SeqCanvas {\n        let width = imgR.width\n        let height= imgR.height\n        let canvas= { width, height, data : new Uint8Array(width*height*3)}\n        let nPixels = width*height\n        let i =0\n        let cPixels = canvas.data\n        let rPixels = imgR.imagePixels\n        let gPixels = imgG.imagePixels\n        let bPixels = imgB.imagePixels\n    \n        for( let p=0; p<nPixels; p++){\n            cPixels[i++] = rPixels[p]\n            cPixels[i++] = gPixels[p]\n            cPixels[i++] = bPixels[p]\n        }\n\n        return canvas\n    }\n\n    /**\n     * convert the input canvas in intensity (Gray Scale)\n     * @param srcImg input canvas\n     */\n    static toGrayScale( srcImg : SeqCanvas ) : ImageFloat32 {\n        let width = srcImg.width\n        let height= srcImg.height\n        let dstImg= ImageFactory.Float32(width,height)\n        let pixels= dstImg.imagePixels\n        let data= srcImg.data\n        let ptr =0\n        for(let p=0; p<pixels.length;p++ ){\n            let r=data[ptr++]\n            let g=data[ptr++]\n            let b=data[ptr++]\n            // see https://en.wikipedia.org/wiki/Grayscale\n            pixels[p] = 0.299*r+0.587*g+0.114*b\n\n        }\n        return dstImg\n    }\n\n    /**\n     *  decompose the current canvas in hue, saturation and value\n     * @param image inpout canvas\n     */\n    static toHSV( image : SeqCanvas ) : [ ImageFloat32, ImageFloat32, ImageFloat32] {\n        let width = image.width\n        let height= image.height\n        let hImg= ImageFactory.Float32(width,height)\n        let sImg= ImageFactory.Float32(width,height) \n        let vImg= ImageFactory.Float32(width,height) \n        let hPixels= hImg.imagePixels\n        let sPixels= sImg.imagePixels\n        let vPixels= vImg.imagePixels\n        let data= image.data\n        let ptr =0\n        for(let p=0; p<width*height;p++ ){\n            let r=data[ptr++]\n            let g=data[ptr++]\n            let b=data[ptr++]\n            let hsv = this.Rgb2Hsv(r/255, g/255, b/255)\n            hPixels[p]=hsv.h\n            sPixels[p]=hsv.s\n            vPixels[p]=hsv.v\n        }\n        return [hImg, sImg, vImg]    \n    }\n\n    /**\n     * Generate a canvas from HSV components\n     * @param hImg hue image. Float image, with values from 0 to 260\n     * @param sImg saturation image. Float image with values from 0 to 1\n     * @param vImg value image. Float image with values from 0 to 1\n     */\n    static fromHSV( hImg : ImageFloat32, sImg : ImageFloat32, vImg : ImageFloat32) : SeqCanvas {\n        let width = hImg.width\n        let height= hImg.height\n        let canvas= { width, height, data : new Uint8Array(width*height*3)}\n        let data = canvas.data\n        let hPixels = hImg.imagePixels\n        let sPixels = sImg.imagePixels\n        let vPixels = vImg.imagePixels\n        let ptr =0;\n        for( let p=0; p<width*height; p++){\n            let h = hPixels[p]\n            let s = sPixels[p]\n            let v = vPixels[p]\n            let rgb = this.Hsv2Rgb(h,s,v)\n            data[ptr++] = rgb.r * 255\n            data[ptr++] = rgb.g * 255\n            data[ptr++] = rgb.b * 255\n        }\n        return canvas\n    }\n\n    /**\n     * convert the values in HSV coordinates\n     * @param r red value in   [0,1.0]\n     * @param g green value in [0,1.0]\n     * @param b blue value in [0,1.0]\n     */\n    private static Rgb2Hsv( r: number, g : number, b: number  ) : { h: number, s: number, v: number } {\n        // talen from https://stackoverflow.com/questions/3018313/algorithm-to-convert-rgb-to-hsv-and-hsv-to-rgb-in-range-0-255-for-both\n        let out = { h: 0, v:0, s: 0}\n        let min = Math.min(r,g,b)\n        let max = Math.max(r,g,b)\n        let delta = max-min\n        out.v = max;\n        if ( delta < 0.00001) {\n            out.h =0\n            out.s =0\n        } else {\n            assert(max > 0)\n            out.s = delta/max\n            if( r === max ) out.h = 0 + (g-b)/delta\n            if( g === max ) out.h = 2 + (b-r)/delta\n            if( b === max ) out.h = 4 + (r-g)/delta\n        }\n\n        out.h *= 60 // in degrees\n        if( out.h < 0 ) out.h += 360\n\n        assert(out.h >=0, `invalid hue ${out.h} with (${r},${g},${b})`)\n        assert(out.s >=0, `invalid sat ${out.s} with (${r},${g},${b})`)\n        assert(out.v >=0, `invalid val ${out.v} with (${r},${g},${b})`)\n        assert(out.h <=360, `invalid hue ${out.h} with (${r},${g},${b})`)\n        assert(out.s <=1.0, `invalid sat ${out.s} with (${r},${g},${b})`)\n        assert(out.v <=1.0, `invalid val ${out.v} with (${r},${g},${b})`)\n\n        return out\n    }\n\n    private static Hsv2Rgb(h:number, s:number, v:number) : {r:number, g:number, b:number} {\n        // from https://stackoverflow.com/questions/3018313/algorithm-to-convert-rgb-to-hsv-and-hsv-to-rgb-in-range-0-255-for-both\n        let out = { r:v, g:v, b:v}\n        if( s > 0 ){\n            assert(h <= 360)\n            let hh = h / 60\n            let region = Math.floor(hh)\n            let reminder = hh - region\n            let p = v * ( 1- s )\n            let q = v * ( 1- (s * reminder))\n            let t = v * ( 1- (s * (1 - reminder)))\n            switch( region ){\n                case 0: \n                    out.r = v\n                    out.g = t\n                    out.b = p\n                    break;\n                case 1:\n                    out.r = q\n                    out.g = v\n                    out.b = p\n                    break;\n                case 2:\n                    out.r = p\n                    out.g = v\n                    out.b = t\n                    break\n                case 3:\n                    out.r = p\n                    out.g = q\n                    out.b = v\n                    break\n                case 4:\n                    out.r = t\n                    out.g = p\n                    out.b = v\n                    break\n                default:\n                    out.r = v\n                    out.g = p\n                    out.b = q\n            }\n        }\n\n        assert(out.r >=0, `invalid red ${out.r} for (${h},${s},${v})`)\n        assert(out.g >=0, `invalid green ${out.g} for (${h},${s},${v})`)\n        assert(out.b >=0, `invalid blue ${out.b} for (${h},${s},${v})`)\n        assert(out.r <=256, `invalid red ${out.r} for (${h},${s},${v})`)\n        assert(out.g <=256, `invalid green ${out.g} for (${h},${s},${v})`)\n        assert(out.b <=256, `invalid blue ${out.b} for (${h},${s},${v})`)\n\n        return out\n    }\n\n    /**\n     * convert the input canvas, assumed to be un RGB space, in to LAB\n     * components using Observer= 2°, Illuminant= D65\n     * @param image input image\n     */\n    static toLab(image : SeqCanvas ) : [ ImageFloat32, ImageFloat32, ImageFloat32] {\n        let width = image.width\n        let height= image.height\n        let lImg= ImageFactory.Float32(width,height)\n        let aImg= ImageFactory.Float32(width,height) \n        let bImg= ImageFactory.Float32(width,height) \n        let lPixels= lImg.imagePixels\n        let aPixels= aImg.imagePixels\n        let bPixels= bImg.imagePixels\n        let data= image.data\n        let ptr =0\n        for(let p=0; p<width*height;p++ ){\n            let r=data[ptr++]\n            let g=data[ptr++]\n            let b=data[ptr++]\n            let lab = this.Rgb2Lab(r/255, g/255, b/255)\n            lPixels[p]=lab.l\n            aPixels[p]=lab.a\n            bPixels[p]=lab.b\n        }\n        return [lImg, aImg, bImg]    \n    }\n\n    static fromLab( lImg : ImageFloat32, aImg : ImageFloat32, bImg : ImageFloat32) : SeqCanvas {\n        let width = lImg.width\n        let height= lImg.height\n        let canvas= { width, height, data : new Uint8Array(width*height*3)}\n        let data = canvas.data\n        let lPixels = lImg.imagePixels\n        let aPixels = aImg.imagePixels\n        let bPixels = bImg.imagePixels\n        let ptr =0;\n        for( let p=0; p<width*height; p++){\n            let l = lPixels[p]\n            let a = aPixels[p]\n            let b = bPixels[p]\n            let rgb = this.Lab2Rgb(l,a,b)\n            data[ptr++] = rgb.r * 255\n            data[ptr++] = rgb.g * 255\n            data[ptr++] = rgb.b * 255\n        }\n        return canvas\n    }\n    \n    // Taken from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n    // which in turns is taken from the heavily referenced web site :\n    // https://www.easyrgb.com/en/math.php\n    static Rgb2Lab(r: number, g: number, b: number) : { l: number, a:number, b:number } {\n  \n        r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n        g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n        b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    \n        let x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n        let y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\n        let z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n    \n        x = (x > 0.008856) ? Math.pow(x, 1/3) : (7.787 * x) + 16/116;\n        y = (y > 0.008856) ? Math.pow(y, 1/3) : (7.787 * y) + 16/116;\n        z = (z > 0.008856) ? Math.pow(z, 1/3) : (7.787 * z) + 16/116;\n    \n        return { l : (116 * y) - 16, a: 500 * (x - y), b: 200 * (y - z) }\n    }\n    static Lab2Rgb(l: number, a: number, b: number) {\n        let y = (l + 16) / 116\n        let x = a / 500 + y\n        let z = y - b / 200\n  \n        x = 0.95047 * ((x * x * x > 0.008856) ? x * x * x : (x - 16/116) / 7.787);\n        y = 1.00000 * ((y * y * y > 0.008856) ? y * y * y : (y - 16/116) / 7.787);\n        z = 1.08883 * ((z * z * z > 0.008856) ? z * z * z : (z - 16/116) / 7.787);\n\n        let rgb = {\n            r : x *  3.2406 + y * -1.5372 + z * -0.4986,\n            g : x * -0.9689 + y *  1.8758 + z *  0.0415,\n            b : x *  0.0557 + y * -0.2040 + z *  1.0570\n        }\n    \n        rgb.r = (rgb.r > 0.0031308) ? (1.055 * Math.pow(rgb.r, 1/2.4) - 0.055) : 12.92 * rgb.r;\n        rgb.g = (rgb.g > 0.0031308) ? (1.055 * Math.pow(rgb.g, 1/2.4) - 0.055) : 12.92 * rgb.g;\n        rgb.b = (rgb.b > 0.0031308) ? (1.055 * Math.pow(rgb.b, 1/2.4) - 0.055) : 12.92 * rgb.b;\n\n        rgb.r = Math.max(0, Math.min(1,rgb.r))\n        rgb.g = Math.max(0, Math.min(1,rgb.g))\n        rgb.b = Math.max(0, Math.min(1,rgb.b))\n\n        return rgb\n    }\n\n}"," /* eslint-disable import/no-webpack-loader-syntax */\nimport comlinkWorker from 'comlink-loader!./bworker.ts'\nimport BackWorker, {BackWorkerClassConstructors} from './bworker'\nimport CanvasUtil from '../../../imglib/canvasUtils'\nimport { PainterType } from './painterSlice'\n\n\nconst BackWorkerFactory = new comlinkWorker<BackWorkerClassConstructors>()\nconst targetSize = 1024\nconst timerSpeed = 300 // millisecond\n\nexport type Progress = ( current : number, total : number ) => void\n\n/**\n * Foreground worker class. This class is designed to work  on the UI Javascript thread\n */\nexport default class ForeWorker {\n\n    private canvas : HTMLCanvasElement | null = null\n    private bworker : BackWorker | null = null\n    private timer : number | null = null\n    private type : PainterType\n    private progress : Progress\n\n    constructor( image : HTMLImageElement, canvas : HTMLCanvasElement, type : PainterType, progress : Progress ) {\n        let imgWidth = image.naturalWidth\n        let imgHeight= image.naturalHeight\n        let wScale = targetSize/imgWidth\n        let hScale = targetSize/imgHeight\n        let scale  = Math.min(wScale, hScale)\n        scale = Math.min( 1.0, scale ) // do not magnify the image\n        let cnvWidth = Math.floor( imgWidth * scale )\n        let cnvHeight= Math.floor( imgHeight * scale)\n        canvas.width = cnvWidth\n        canvas.height= cnvHeight;\n        let ctx = canvas.getContext('2d') \n        if( ctx ){\n            ctx.drawImage(image, 0, 0, imgWidth, imgHeight, 0, 0, cnvWidth, cnvHeight)\n            this.canvas = canvas\n        } else {\n            console.error(`unable to obtain canvas context`)\n        }\n        this.type = type\n        this.progress = progress\n    }\n\n    async start(){\n\n        const doWork = async () => {\n            this.timer  = null\n            if( this.canvas) {\n                if( this.bworker == null  ){\n                    // start\n                    this.progress( 0, 10 ) // arbitraty, just set it to 0 now.\n                    let seqCanvas = CanvasUtil.toSeq(this.canvas)\n                    this.bworker  = await new BackWorkerFactory.default(seqCanvas, this.type)\n                }\n                const work = await this.bworker!.next() // do work !\n                if( work.image ){\n                    CanvasUtil.fromSeq(work.image, this.canvas)\n                    this.timer  = window.setTimeout(doWork, timerSpeed) // continue the work\n                    this.progress( work.current, work.total)\n                }\n            }\n        }\n        if( this.timer != null ) window.clearTimeout(this.timer)\n        this.timer  = window.setTimeout(doWork, timerSpeed)\n    } \n\n    async stop(){\n        if( this.timer != null ) window.clearTimeout(this.timer)\n        if( this.bworker != null ) await this.bworker.stop()\n        this.canvas = null\n        this.bworker= null\n        this.timer  = null\n    }\n\n}\n","import React, {useState, useEffect,useRef, useCallback} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PanZoom from './PanZoom'\nimport ForeWorker from './appWorker/fworker'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectPainter } from './appWorker/painterSlice';\nimport { selecDownload, setDownload } from './downloadSlice';\nimport { setProgress } from './progressSlice';\n\nconst useStyles = makeStyles((theme) => ({\n    mainDiv:   {\n        width:'100%',\n        height:'100%' \n        }\n    }))\n\nexport interface AppDisplayInfo  {\n    imagePath : string\n}\n\nexport default function AppDisplay({imagePath} : AppDisplayInfo){\n    const [isloading, setLoading] = useState<Boolean>(true)  \n    let canvas = useRef<HTMLCanvasElement|null>(null)\n    let mDiv   = useRef<HTMLDivElement|null>(null) \n    let worker = useRef<ForeWorker|null>(null)\n    const classes = useStyles();\n    const painter = useSelector(selectPainter)\n    const download= useSelector(selecDownload)\n    const dispatch= useDispatch();\n\n    // Downloader\n    useEffect(()=>{\n        if( canvas.current && download && worker.current ){\n            // see https://stackoverflow.com/questions/10673122/how-to-save-canvas-as-an-image-with-canvas-todataurl\n            let dImage = canvas.current.toDataURL('image/jpg').replace(\"image/png\", \"image/octet-stream\"); \n            let link = document.createElement('a') \n            link.setAttribute('download', 'myImage.jpg')\n            link.setAttribute('href', dImage)\n            link.click()  \n        }\n        dispatch(setDownload(false))\n    },[canvas, download, dispatch])\n\n\n    // Image processor\n\n    const progressCallback = useCallback((current : number, total : number) =>{\n        dispatch(setProgress({current, total}))\n    },[dispatch])\n\n\n    useEffect(()=>{\n        if( imagePath === null ) return;\n        setLoading(true)\n        let img = document.createElement('img') as HTMLImageElement\n        img.onload = (e) => {\n            const startWorker = () =>{\n                if( canvas.current){\n                    worker.current = new ForeWorker(img, canvas.current, painter, progressCallback)\n                    worker.current.start()\n                    setLoading(false)\n                } else {\n                    console.error(`canvas null when image received. THIS SHOULD NOT HAPPEN`)\n                }\n            }\n            if( worker.current != null )  worker.current.stop().then(startWorker)\n            else startWorker()\n        }\n        img.src= imagePath\n    },[imagePath,canvas, painter, progressCallback])\n\n    return (\n        <div ref={mDiv} className={classes.mainDiv}>\n            {\n                <PanZoom filename={imagePath}>\n                    <canvas ref={canvas}/>\n                </PanZoom>\n            }\n        </div>\n    )\n}\n","import React, {useState, useCallback} from 'react'\nimport  { useDropzone } from \"react-dropzone\"\nimport { FileWithPath } from \"file-selector\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport Typography from '@material-ui/core/Typography';\nimport AppDisplay from './appDisplay'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n            width:'100%',\n            height:'100%',\n            padding:'4px'\n        },\n        drop :{\n            width:'100%',\n            height:'100%',\n            borderWidth:'2px',\n            borderStyle: 'dotted',\n            borderColor: theme.palette.primary.light,\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            \"&:hover\": {\n                borderColor: theme.palette.primary.dark\n              },\n            \"& .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.light\n            },\n            \"&:hover .AddIcn\" :{\n                fontSize:80,\n                color: theme.palette.primary.dark\n            },\n            \"& .text\" :{\n            textAlign:'center',\n            color:theme.palette.primary.light \n            },\n            \"&:hover .text\" :{\n                textAlign:'center',\n                color:theme.palette.primary.dark \n            }\n        },\n        noDisplay : {\n            display:'none'\n        }\n    }))\n\n    const imageExtensions = ['.jpg','.png','.jpeg']\n\n    export default function AppMain(){\n        const classes = useStyles();\n        const [file, setFile] = useState<string|null>(null)\n        const onDrop = useCallback((files: FileWithPath[]) => {\n            let list = files.filter((file)=>imageExtensions.some((ext)=>file.path?.toLowerCase().endsWith(ext)))\n            if( list.length > 0 ) {\n                let path = URL.createObjectURL(list[0])\n                setFile(path)\n            }\n        }, [])\n        const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n    \n        return (\n            <div className={classes.root}>\n                    <div {...getRootProps()} className={classes.root}>\n                            <div className={ isDragActive ? classes.drop : classes.noDisplay}>\n                                <ArrowDownwardIcon className=\"AddIcn\"/>\n                                <Typography className=\"text\">Drop the images here.</Typography>\n                            </div> \n                            {\n                                file !== null ?\n                                <>\n                                    <AppDisplay imagePath={file} />\n                                </> :\n                                <div className={classes.drop}>\n                                    <input {...getInputProps()} />\n                                    <AddIcon className=\"AddIcn\"/>\n                                    <Typography className=\"text\">Drag and Drop here your image.</Typography>\n                                    <Typography className=\"text\">or click here to select the image to view.</Typography>\n                                </div> \n                            }\n                    </div>\n            </div>\n        )\n    }\n","import React from \"react\";\nimport {\n  createMuiTheme,\n  withStyles,\n  createStyles,\n  Theme,\n  WithStyles,\n  StyleRules\n} from \"@material-ui/core/styles\";\nimport {\n  MuiThemeProvider,\n  CssBaseline,\n} from \"@material-ui/core\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport AppVersion from './features/appVersion/appVersion'\nimport AppToolbar from './features/appToolbar/appToolbar'\nimport AppMain from './features/appMain/appMain'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: {\n      main: \"#fff\"\n    },\n    background: {\n      default: \"#fff\"\n    },\n  }\n});\n\nconst styles: (theme: Theme) => StyleRules<string> = theme =>\ncreateStyles({\n  app: {\n    textAlign: \"center\" \n  },\n  main :{\n    position:'absolute',\n    top:'55px',\n    right: '0px',\n    left:'0px',\n    bottom: '0px',\n    background : 'white',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n});\n\ntype AppProps = {} & WithStyles<typeof styles>;\n\nconst App = ({ classes }: AppProps) => (\n  <MuiThemeProvider theme={theme}>\n    <CssBaseline />\n    <div className={classes.app}>\n      <AppToolbar/>\n      <div className={classes.main}>\n        <AppMain />\n      </div>\n      <AppVersion label=\"version : \" forkme={false} baseURL=\"https://github.com/VittorioAccomazzi/Artist\" />\n    </div>\n  </MuiThemeProvider>\n);\n\nexport default withStyles(styles)(App);\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport painterReducer from './features/appMain/appWorker/painterSlice'\nimport downloadReducer from './features/appMain/downloadSlice'\nimport progressReducer from './features/appMain/progressSlice'\n\nexport const store = configureStore({\n  reducer: {\n    painter : painterReducer,\n    download: downloadReducer,\n    progress: progressReducer\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}